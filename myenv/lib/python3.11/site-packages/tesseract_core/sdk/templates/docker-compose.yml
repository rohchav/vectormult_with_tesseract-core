services:
{% for service in services %}
  {{ service.name }}:
    image: {{ service.image }}
    restart: unless-stopped
    entrypoint: tesseract-runtime serve
    ports:
      - {{ service.port }}
    {%- if service.volumes %}
    volumes:
    {%- for volume in service.volumes %}
      - {{ volume }}
    {% endfor -%}
    {% endif %}
    healthcheck:
      test: python -c "import requests; requests.get('http://localhost:8000/health').raise_for_status()" || exit 1
      interval: 0.1s
      retries: 300
      start_period: 1s
    networks:
      - multi-tesseract-network
    {%- if service.environment %}
    environment:
    {%- for key, value in service.environment.items() %}
      {{ key }}: {{ value }}
    {% endfor -%}
    {% endif %}
    {%- if service.gpus %}
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: [gpu]
            {{ service.gpus }}
    {% endif %}
{% endfor %}

networks:
  multi-tesseract-network:
    name: multi-tesseract-network
